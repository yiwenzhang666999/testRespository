/**
 * 加载树形结构
 */
define(["treeHelper", "severZtree"], function (treeHelper, severZtree) {
    'use strict';
    var flag = 0;
    var datas = [];
    var setting = { // 控制第一层展开
            expandLevel: 1
        };
    var tree = treeHelper.getTree("zyjg", setting, []);
    function init() {
        var treeHelper1 = treeHelper;
        getData('FS_BUSINESS_USERBUSLAYERS', "I_USERID = '" + userObj.userId + "' And C_APPID = '" + window.appid_ +"'", treeHelper1); // 变化地块 "I_USERID = '" + user_ +"' And C_APPID = '" + appId + "'";
        getData('FS_BUSINESS_USERCUSLAYERS', "I_USERID = '" + userObj.userId + "'", treeHelper1); // 业务数据 
    }
    /**
     * 查询数据库获取树形结构数据
     * @param  {} tableName
     * @param  {} whereString 查询条件
     * @param  {} treeHelper
     */
    function getData(tableName, whereString, treeHelper) {
        var queryParam = {};
        queryParam.whereString = whereString;
        queryParam.orderByString = 'I_ID, I_LYRORDERID';
        FsService.getEntityList(tableName, queryParam, {
            callback: function (result) {
                dataProcessing(result, treeHelper, tableName);
            },
            xceptionHandler: function (e) {
            },
        });
    }
    /**
     * 查询数据库后数据处理
     * @param  {} data 
     * @param  {} treeHelper 
     * @param  {} tableName 
     */
    function dataProcessing(data, treeHelper, tableName) {
        flag += 1;
        if (tableName == "FS_BUSINESS_USERBUSLAYERS") { // 变化地块
            var temp1 = {};
            temp1.id = "bhdk";
            temp1.pid = -1;
            temp1.text = "变化地块";
            temp1.showAdd = true;
            temp1.isQuery = true;
            temp1.layerName="变化地块";
            temp1.type="bhdk";
            temp1.children = [];
            for (var i = 0; i < data.length; i++) {
                var obj1 = data[i].originalObjects;
                if (obj1.C_XIAN == '' || obj1.C_XIAN == null) { // 省
                    var temp2 = {};
                    temp2.id = "bhdk" + obj1.I_ID;
                    temp2.text = obj1.C_SHENGNAME;
                    temp2.children = [];
                    for (var j = 0; j < data.length; j++) {
                        var obj2 = data[j].originalObjects;
                        if (obj1.I_ID == obj2.I_PARID) { // 有子节点 
                            var temp3 = {};
                            temp3.id = "bhdk" + obj2.I_ID;
                            temp3.text = obj2.C_XIANNAME;
                            temp3._data = { xian: obj2.C_XIAN, type: 'bhdk' };
                            if (obj2.C_DATANAME) {
                                temp3.children = [{ id: "bhdk" + obj2.I_ID+"_tb0", text: obj2.C_DATANAME, xian: obj2.C_XIAN, _data:{ xian: obj2.C_XIAN, type: 'bhdk' }, edit: true,showMore: true }];
                            }
                            temp2.children.push(temp3);
                        }
                    }
                    temp1.children.push(temp2);
                }
            }
            datas.push(temp1);
        } else { // 业务数据
            var temp1 = {};
            temp1.id = "ywsj";
            temp1.pid = -1;
            temp1.text = "业务数据";
            temp1.showAdd = true;
            temp1.children = [];
            for (var i = 0; i < data.length; i++) {
                var obj1 = data[i].originalObjects;
                var temp2 = {};
                temp2.id = "ywsj";
                temp2.layerId = obj1.I_ID;
                temp2.text = obj1.C_DATANAME;
                temp2.isQuery = true;
                temp2.showDel = true;
                temp2.edit = true;
                temp2._data = {layerId: obj1.I_ID, type: 'ywsj'}
                temp1.children.push(temp2);
            }
            datas.push(temp1);
        }
        if (flag == 2) {
           
            datas.sort(function(a,b){
            	if(a.text == "变化地块"){
            		return -1;
            	}else{
            		return 1;
            	}
            })
            var tree = treeHelper.getTree("zyjg");
            tree.addNodes(datas[0]);
            tree.addNodes(datas[1]);
        }
    }
    /**
     * 点击编辑节点时控制编辑框的高度
     */
    function onclickEditNode () {
        var legend = $(".card.bhdk");
        newDom.unbind('click').bind('click',function(){
        $(".card.bhdk").toggle();
            var $element = $(this);
            setTimeout(function(){
                var max = $(window).height() -legend.outerHeight();
                var top = $element.offset().top;
                if(top >= max){
                    top = max;
                }
                if(top>100&&legend.outerHeight()>150){
                    top=top-100;
                }else{
                    top=top-50;
                }
                legend.css("top",top+"px");
            },'100');
        })
    }
    return {
        init: init
    }
});