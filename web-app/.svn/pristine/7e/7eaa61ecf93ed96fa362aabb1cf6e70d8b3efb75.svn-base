define(["publicObj","queryLayer","util","managerTool","treeHelper"], function (publicObj,queryLayer,util,managerTool,treeHelper) {
	'use strict';
	var total=0;
	var Current=0;
	var ids=[];
	var xys={};
	var CurrentId=-1;
	var geojsonFormat = new ol.format.GeoJSON();
	var newData={};
	var selectStyle = new ol.style.Style({
        fill: new ol.style.Fill({ color: "rgba(255,255,255,0)" }),
        stroke: new ol.style.Stroke({ color: 'rgb(255,0,0)', width: 3 })
    });
	function init() {
		$(".zs-toolbar .btns a.tool-sh").click(function(e){
			if($("#public_shdk_pop.plugin-with-box").length==0)
				start();
		});
	}
	function start(){
		var template = {
		        "ID":1,
		        "C_TYPE":"default",
		        "C_ZQCODE":"200000",
		        "I_USERID":1,
		        "C_NR":[
		            {"FIELDNAME":"C_XIAN","DICTNAME":"县(林业局)","FIELDTYPE":"STRING","ZINDEX":1,"CANSHOW":"是","DICTITEM":""},
		            {"FIELDNAME":"C_XIANG","DICTNAME":"乡(林场)","FIELDTYPE":"STRING","ZINDEX":2,"CANSHOW":"是","DICTITEM":""},
		            {"FIELDNAME":"C_CUN","DICTNAME":"村(林班)","FIELDTYPE":"STRING","ZINDEX":3,"CANSHOW":"是","DICTITEM":""},
		            {"FIELDNAME":"C_XIAOBAN","DICTNAME":"小班","FIELDTYPE":"STRING","ZINDEX":5,"CANSHOW":"是","DICTITEM":""},
		            {"FIELDNAME":"C_WORKYEAR","DICTNAME":"工作年度","FIELDTYPE":"STRING","ZINDEX":6,"CANSHOW":"是","DICTITEM":""},
		            {"FIELDNAME":"I_LON_DEG","DICTNAME":"经度","FIELDTYPE":"DOUBLE","ZINDEX":7,"CANSHOW":"是","DICTITEM":""},
		            {"FIELDNAME":"I_LAT_DEG","DICTNAME":"纬度","FIELDTYPE":"DOUBLE","ZINDEX":8,"CANSHOW":"是","DICTITEM":""},
		            {"FIELDNAME":"D_AREA","DICTNAME":"面积","FIELDTYPE":"STRING","ZINDEX":9,"CANSHOW":"是","DICTITEM":""},
		            {"FIELDNAME":"C_YSBHYY","DICTNAME":"疑似变化原因","FIELDTYPE":"STRING","ZINDEX":10,"CANSHOW":"是","DICTITEM":[
		                {"CODE":1,"NAME":"采伐"},{"CODE":2,"NAME":"占地"},{"CODE":3,"NAME":"毁林开垦"},{"CODE":4,"NAME":"灾害"},
		                {"CODE":5,"NAME":"造林"},{"CODE":6,"NAME":"其他减少"},{"CODE":7,"NAME":"其他增加"}
		            ]},
		            {"FIELDNAME":"C_HSBHYY","DICTNAME":"核实变化原因","FIELDTYPE":"STRING","ZINDEX":11,"CANSHOW":"是","DICTITEM":[
		                {"CODE":10,"NAME":"造林更新"},{"CODE":20,"NAME":"森林采伐"},{"CODE":30,"NAME":"规划调整"},{"CODE":41,"NAME":"经审批使用林地"},
		                {"CODE":42,"NAME":"未审批使用林地"},{"CODE":50,"NAME":"毁林开垦"},{"CODE":71,"NAME":"火灾"},
		                {"CODE":72,"NAME":"地质灾害"},{"CODE":73,"NAME":"其它灾害因素"},{"CODE":81,"NAME":"封山育林"},
		                {"CODE":82,"NAME":"其他自然更新"},{"CODE":91,"NAME":"漏划"},{"CODE":92,"NAME":"错划"},
		                {"CODE":93,"NAME":"其它调查因素"}, {"CODE":96,"NAME":"行政界线调整"}, {"CODE":99,"NAME":"管理因子变化"},
		                {"CODE":11,"NAME":"人工造林或飞播造林"},
		                {"CODE":12,"NAME":"人工更新"}, {"CODE":98,"NAME":"新增管理界线"}, {"CODE":97,"NAME":"边界引起的细碎合并"},
		            ]},
		            {"FIELDNAME":"C_YIJU","DICTNAME":"依据","FIELDTYPE":"STRING","ZINDEX":12,"CANSHOW":"是","DICTITEM":""},
		            {"FIELDNAME":"C_USERNAME","DICTNAME":"判读人","FIELDTYPE":"STRING","ZINDEX":13,"CANSHOW":"是","DICTITEM":""},
		            {"FIELDNAME":"DT_CREATETIME","DICTNAME":"判读时间","FIELDTYPE":"DATA","ZINDEX":14,"CANSHOW":"是","DICTITEM":""},
		            {"FIELDNAME":"C_CHECKUSERNAME","DICTNAME":"审核人","FIELDTYPE":"STRING","ZINDEX":15,"CANSHOW":"是","DICTITEM":""},
		            {"FIELDNAME":"DT_CHECKTIME","DICTNAME":"审核时间","FIELDTYPE":"DATA","ZINDEX":16,"CANSHOW":"是","DICTITEM":""},
		        ]
		    };
		//清除选中图斑
		managerTool.clear(true,true);
		//选择功能置灰不可用
		$(".tool-xz").addClass("disable");
		//弹出属性框
		popFun(null,publicObj.features[0],template);
	}
	function getTotal(){
		var option ={
		        //生成li标签的HTML字符串
		        callback:function(res){
		            var shdk_current = $("#shdk_current");
		            var shdk_total = $("#shdk_total");
		            shdk_current.html("0");
		            shdk_total.html("0");
		            if(res&&res.total>0){
		            	ids=res.ids.split(",");
		            	xys=JSON.parse(res.xys);
		            	total=res.total;
			            shdk_current.html("1");
			            shdk_total.html(res.total);
			    		//获取数据
			    		getData(xys[ids[0]]);
		            }
		        },
		        exceptionHandler:function(evt){
		            console.log("错误信息："+evt);
		        }
		};
		var datas={xian:$("#shdkSelect").val()};
		$.ajax({
		    url:"shdk/getTotal.do",
		    type:"POST",
		    data:{data:JSON.stringify(datas)},
		    cache : false,
		    dataType : 'json',
		    success :option.callback,
		    error:option.exceptionHandler
		});
		//清除所有
        clear();
	}
    /**
     * 弹窗方法
     * @param type：类型(add)目前只有这一个标识，不是新增情况null
     * @param feature：图形元素ol.feature
     * @param template：模板
     * **/
	function popFun(type, feature, template) {
		if (window.ldyzt_fullScreen) {
			var fullScreenId = "map_continer";
		} else {
			var fullScreenId = null;
		}
		var html = getPopHtml(feature, template);
		var ibox = $("#public_shdk_pop").modal({
			title: "审核",
			overlay: false,
			showMin: false,
			showMax: false,
			showTop: false,
			isDrag: true,
			fullScreenId: fullScreenId,
			contentWidth: 340,
			type: "clone",
			target: html || "",
			removeCallBack:function(){
				//选择功能置灰还原
				$(".tool-xz").removeClass("disable");
				var layer = map.getLayerByName("HIGH_LAYER");
				if(publicObj.features.length!=0){
					layer.getSource().removeFeature(publicObj.features[0]);
					publicObj.features.splice(0,1);
				}
				$(".tool-qc").click();
				setButtonStatus(98);
			},
			addCallBack: function () {
				var iBox = this;
				$(".zs-nicescroll").niceScroll({
					cursorcolor: "#777",
					cursorborder: "none",
				});
				$(".zs-btn.tg-button").click(function(e){
					shdk(0);
				});
				$(".zs-btn.cz-button").click(function(e){
					shdk(2);
				});
				$(".zs-btn.bsbh-button").click(function(e){
					shdk(-1);
				});
				$(".zs-btn.syg-button").click(function(e){
					newData={};
					NextData(true);
				});
				$(".zs-btn.xyg-button").click(function(e){
					newData={};
					NextData(false);
				});
				//获取政区下拉数据
				getZqList();
			}
		});
		ibox.click();
	}
	function NextData(type){
		var shdk_current = $("#shdk_current");
		var len=0;
		if(!type){
			len=Number(shdk_current.html())+1;
		}else{
			len=Number(shdk_current.html())-1;
		}
		shdk_current.html(len);
		//清空表单元素
		var form = document.getElementById("popIbox_xbsx");  
		var elements = new Array();  
		var tagElements = form.getElementsByTagName('input');  
		for (var j = 0; j < tagElements.length; j++){ 
			tagElements[j].value="";
		}
		//禁用审核按钮
		$(".zs-btn.tg-button").addClass("disabled").attr("disabled", "disabled");
		$(".zs-btn.cz-button").addClass("disabled").attr("disabled", "disabled");
		$(".zs-btn.bsbh-button").addClass("disabled").attr("disabled", "disabled");
		clear();
		getData(xys[ids[len-1]]);
	}
    /**
     * feature：ol.feature
     * 保存方法
     * **/
	function shdk(status){
		window.openAlert();
		var form = $('#popIbox_xbsx')[0];
		var elements = form.getElementsByTagName('input');
		var property = {};
		for (var i = 0; i < elements.length; i++) {
			var element = elements[i];
			if (element.name && element.name != 'lon' && element.name != 'lat') {
				property[element.name] = element.value;
			}
		}
		if(status==0){
			for(var k in property){
				if(typeof k !="string"){
					continue;
				}
				console.log("property[k]:"+property[k]);
				console.log("newData[k]:"+newData[k]);
				if(property[k]!=newData[k]){
					status=1;
					break;
				}
			}
		}
		var feature=publicObj.features[0];
		feature.setProperties(property);
		//新增 wkt 字段 by zzq 20171205
		var z_wkt = new ol.format.WKT();
		var C_WKT = z_wkt.writeFeature(feature);
		//property.wkt=C_WKT;
		property.C_OBJINFO = C_WKT; 
		//属性编辑的保存
		property.ID = feature.getProperties().ID;
		property.I_EDITUSERID = userObj.userId;
		property.D_EDITTIME = util.getLocalDate();
		property.C_STATUS = status;
		property.C_CHECKUSERID = userObj.userId;
		delete property.C_OBJINFO;
		var data = {
			addRow: null,
			updateRow: property,
			delRow: null,
			type: "updateParam",
			tableName: 'ZYJG_BHTB',
			xianCode: property.C_XIAN,
			y: property.I_LAT_DEG,
			x: property.I_LON_DEG
		}
		var shdkdata={xian:property.C_XIAN,id:property.ID}
		//查询当前地块是否已经审核
		$.ajax({
			url: "shdk/shdkData.do",
			type: "POST",
			data: { data: JSON.stringify(shdkdata) },
			success: function (res) {
				if ("1"==res) {
					$.ajax({
						url: "dataService.do",
						type: "POST",
						data: { jsonStr: JSON.stringify(data) },
						success: function (res) {
							if (res.success) {
								if (res.rowId && res.rowId.length > 0) {
									var ID = res.rowId[0];
									var xianCode = res.xianCode;
									feature.setProperties({ ID: ID, C_XIAN: xianCode, C_STATUS: status });
									var b = setStyle([feature]);
								}
							}
							window.closeAlert();
							if($("#shdk_current").html()!=$("#shdk_total").html()){
								$(".zs-btn.xyg-button").click();
							}
							clear();
						},
						error: function (err) {
							util.validateSession(err);
							window.openAlert();
							console.log(err);
						}
					});
				}else{
					window.openAlert();
				}
			},
			error: function (err) {
				util.validateSession(err);
				window.openAlert();
				console.log(err);
			}
		});
	}
	function getData(coor){
//	function getData(feature){
//		var polygon = feature.getGeometry().getCoordinates();
//		var coor = PL.Polylabel(polygon, "EPSG:4490");
		//如果是最后一个，则禁用“下一个”功能按钮
		if($("#shdk_current").html()==total){
			$(".zs-btn.xyg-button").addClass("disabled").attr("disabled", "disabled");
		}else{
			$(".zs-btn.xyg-button").removeClass("disabled").attr("disabled", false);
		}
		if(!coor||!(Number(coor[0])&&Number(coor[1]))){
			mini.alert("坐标不正确！");
			return;
		}
		coor=coor.split(",");
		var form = $('#popIbox_xbsx')[0];
		var elements = form.getElementsByTagName('input');
		var callback = function (res) {
			if (typeof res == 'object' && res.success) {
				var data = JSON.parse(res.data);
				newData=data;
				elements.C_XIAN.value = data.C_XIAN || '';
				elements.C_XIANNAME.value = data.C_XIANNAME || '';
				elements.C_XIANG.value = data.C_XIANG || '';
				elements.C_CUN.value = Number(data.C_CUN) ? (Number(data.C_CUN)) : (data.C_CUN || '');
				elements.C_XIAOBAN.value = Number(data.C_XIAOBAN) ? (Number(data.C_XIAOBAN)) : (data.C_XIAOBAN || '');
				elements.C_WORKYEAR.value = data.C_WORKYEAR || '';
				elements.I_LON_DEG.value = coor[0]/* .toFixed(2) */;
				var lonArr = util.getDFM(coor[0]);
				elements.lon.value = lonArr[0] + "°" + lonArr[1] + "′" + lonArr[2] + "″";
				elements.I_LAT_DEG.value = coor[1]/* .toFixed(2) */;
				var latArr = util.getDFM(coor[1]);
				elements.lat.value = latArr[0] + "°" + latArr[1] + "′" + latArr[2] + "″";
//				elements.D_AREA.value = util.getArea(feature.getGeometry());
				elements.D_AREA.value = data.D_AREA || '';
				elements.C_YSBHYY.value = data.C_YSBHYY || '';
				$(elements.C_YSBHYY).siblings().val(data.C_YSBHYY);
				elements.C_HSBHYY.value = data.C_HSBHYY || '';
				$(elements.C_HSBHYY).siblings().val(data.C_HSBHYY);
				elements.C_YIJU.value = data.C_YIJU || '';
				elements.C_USERNAME.value = data.C_USERNAME || '';
				elements.DT_CREATETIME.value = data.DT_CREATETIME || '';
				elements.C_CHECKUSERNAME.value =  userObj.realName||data.C_CHECKUSERNAME;
				elements.DT_CHECKTIME.value = util.getDate("yyyy-MM-dd")||data.DT_CHECKTIME;

				if([0,1,-1].indexOf(data.C_STATUS)==-1){
					$(".zs-btn.tg-button").removeClass("disabled").attr("disabled", false);
					$(".zs-btn.cz-button").removeClass("disabled").attr("disabled", false);
					$(".zs-btn.bsbh-button").removeClass("disabled").attr("disabled", false);
				}
				setActive(data);
				map.getMap().getView().setCenter([Number(coor[0]),Number(coor[1])]);
				map.getMap().getView().setZoom(14);
			}else{
				var layer = map.getLayerByName("HIGH_LAYER");
				if(publicObj.features.length!=0){
					layer.getSource().removeFeature(publicObj.features[0]);
					publicObj.features.splice(0,1);
				}
			}
		}
		queryLayer.queryBySpace(coor, '2017', { queryType: "bhdk" }, callback);
	}
	function nodeClick(node,layerName){
		if(node.children&&node.children.length>0){
			for(var i=0;i<node.children.length;i++){
				nodeClick(node.children[i],layerName);
			}
		}else{
			if(node.selectId&&node.selectId==layerName){
				$("[tid='"+node.id+"'] i").click();
			}
		}
	}
	function setActive(data){
		//判断是否有此图层，避免编辑图形时报错
		var layerName = data.C_XIAN + "_" + data.C_WORKYEAR;
		if(!publicObj.getLayerByName(layerName)){
//			if(!layer&&confirm("您选中"+$("#shdkSelect").find("option:selected").text()+"的数据！是否选中？")){
			var tree=treeHelper.getTree("zyjg");
			nodeClick(tree.getNodes()[0],layerName);
		}
		//高亮
		var layer = map.getLayerByName("HIGH_LAYER");
		var geojson = {
            type: 'Feature',
            geometry: JSON.parse(data.shape),
            properties: { ID: data.ID, C_XIAN: data.C_XIAN, C_WORKYEAR: data.C_WORKYEAR,/*C_STATUS:key*/ }
        }
        var feature = geojsonFormat.readFeature(geojson);
		publicObj.features.push(feature);
		feature.setStyle(selectStyle);
		layer.getSource().addFeature(feature);

		!data.C_STATUS?data.C_STATUS="99":"99";
		setButtonStatus(data.C_STATUS);
	}
	function getZqList(){
		//获取政区
		var tableName = "FS_BUSINESS_USERBUSLAYERS";
		var userInfo = userObj;
		var userId = userInfo.userId;
		var appId = window.appid_;
		var whereStr = "I_USERID = '"+userId+"' and C_APPID ='"+appId+"'";
		var option ={
		        //生成li标签的HTML字符串
		        callback:function(res){
		            var contList = $("#shdkSelect");
		            if(!res){
		                var zqHtml = "<option value =''>无政区数据</option>";
		                contList.html(zqHtml);
		            }else if(res.length>0){
		                contList.html("<option value =''>--请选择--</option>"+res[0]);
		            }else{
		                var zqHtml = "<option value =''>无政区数据</option>";
		                contList.html(zqHtml);
		            }
		        },
		        exceptionHandler:function(evt){
		            console.log("错误信息："+evt);
		        }
		};
		var datas={tableName:tableName,whereStr:whereStr,selectVal:''};
		$.ajax({
		    url:"getReportZqList.web",
		    type:"POST",
		    data:{data:JSON.stringify(datas)},
		    cache : false,
		    dataType : 'json',
		    success :option.callback,
		    error:option.exceptionHandler
		});
	}
	//解析模板，生成表单的html
	function getPopHtml(feature, template) {
		var arr = typeof template.C_NR == 'object' ? template.C_NR : JSON.parse(template.C_NR);
		var data = {};
		var html = "<span>县：</span><select id='shdkSelect' style='width:160px;' onchange='zqoptionClick(this)'></select><span style='padding-left: 20px;'><span id='shdk_current'>0</span>/<span id='shdk_total'>0</span></span>";
		html += "<div class='zs-nicescroll' style='max-height: 500px;'>" +
				"<form id='popIbox_xbsx' style='width:300px'><table class='fore-common-form-tabs'";
		window.optionClick = optionClick;
		window.zqoptionClick = zqoptionClick;
		for (var i = 0; i < arr.length; i++) {
			var fieldObj = arr[i];
			html += "<tr><td class='text'>" + fieldObj.DICTNAME + "</td>";
			var value = data[fieldObj.FIELDNAME] ? data[fieldObj.FIELDNAME] : '';
			if (fieldObj.GROUP) {
				html += "<td class='input'>";
				var groupArr = fieldObj.GROUP;
				for (var z = 0; z < groupArr.length; z++) {
					var item = groupArr[z];
					var itemValue = data[item.FIELDNAME] ? data[item.FIELDNAME] : '';
					html += "<input type='text' style='width:35px;' name= '" + item.FIELDNAME + "'value='" + itemValue + "'/> " + item.DICTNAME + " ";
				}
				html += "</td></tr>";
			} else if (fieldObj.DICTITEM) {
				var itemArr = fieldObj.DICTITEM;
				html += "<td class='input'>" +
					"<input type='hidden' value='" + value + "' name='" + fieldObj.FIELDNAME + "'/>" +
					"<select style='width:160px;' onchange='optionClick(this)'>" +
					"<option value=''>--请选择--</option>";
				for (var j = 0; j < itemArr.length; j++) {
					var item = itemArr[j];
					if (value == item.NAME) {
						html += "<option selected='selected' value='" + item.NAME + "'>" + item.NAME + "</option>";
					} else {
						html += "<option value='" + item.NAME + "'>" + item.NAME + "</option>";
					}
				}
				html += "</select>" + "</td></tr>";
			} else {
				if (fieldObj.FIELDNAME == "I_LON_DEG") {
					html += "<td class='input'>"
						+ "<input type='hidden' style='width:160px;' value='" + value + "' name='" + fieldObj.FIELDNAME + "'/>"
						+ "<input type='text' style='width:160px;' value='' name='lon'/>"
						+ "</td></tr>";
				} else if (fieldObj.FIELDNAME == "I_LAT_DEG") {
					html += "<td class='input'>"
						+ "<input type='hidden' style='width:160px;' value='" + value + "' name='" + fieldObj.FIELDNAME + "'/>"
						+ "<input type='text' style='width:160px;' value='' name='lat'/>"
						+ "</td></tr>";
				} else if (fieldObj.FIELDNAME == "C_XIAN") {
					html += "<td class='input'>"
						+ "<input type='hidden' style='width:160px;' value='" + value + "' name='" + fieldObj.FIELDNAME + "'/>"
						+ "<input type='text'    style='width:160px;' value='' name='C_XIANNAME'/>"
						+ "</td></tr>";
				} else if (fieldObj.FIELDNAME == "C_USERNAME") {
					html += "<td class='input'>"
						+ "<input type='text' readonly='readonly' style='width:160px;' value='" + value + "' name='" + fieldObj.FIELDNAME + "'/>"
						+ "</td></tr>";
				}
				else if (fieldObj.FIELDNAME == "DT_CREATETIME") {
					html += "<td class='input'>"
						+ "<input type='text' style='width:160px;'  readonly='readonly' value='" + value + "' name='" + fieldObj.FIELDNAME + "'/>"
						+ "</td></tr>";
				} else if (fieldObj.FIELDNAME == "C_CHECKUSERNAME") {
					html += "<td class='input'>"
						+ "<input type='text' readonly='readonly' style='width:160px;' value='" + value + "' name='" + fieldObj.FIELDNAME + "'/>"
						+ "</td></tr>";
				}
				else if (fieldObj.FIELDNAME == "DT_CHECKTIME") {
					html += "<td class='input'>"
						+ "<input type='text' style='width:160px;'  readonly='readonly' value='" + value + "' name='" + fieldObj.FIELDNAME + "'/>"
						+ "</td></tr>";
				}
				else {
					html += "<td class='input'>"
						+ "<input type='text' style='width:160px;' value='" + value + "' name='" + fieldObj.FIELDNAME + "'/>"
						+ "</td></tr>";
				}
			}
		}
		html += "</table></form></div>";
		html += "<div class='fore-core-btnboxs'>" +
//			"<button class='zs-btn syg-button' style='width:5px;padding: 0px 10px;'>上一个</button>" +
			"<button class='zs-btn disabled tg-button' disabled='disabled' style='padding: 0px 10px;'>通过</button>" +
			"<button class='zs-btn disabled cz-button' disabled='disabled' style='padding: 0px 10px;'>重做</button>" +
			"<button class='zs-btn disabled bsbh-button' disabled='disabled' style='padding: 0px 10px;'>不是变化</button>" +
			"<button class='zs-btn disabled xyg-button' disabled='disabled' style='padding: 0px 10px;'>下一个</button></div>";
		return html;
	}
	//select标签的change事件
	function optionClick(e) {
		$(e).siblings("input").val(e.value);
	}
	function zqoptionClick(e){
		clear();
		//获取总条数与id集合
		getTotal();
	}
	function closePop() {
		$(".close-btn").click();
	}
	function clear(){
		var layer = map.getLayerByName("HIGH_LAYER");
		if(publicObj.features.length!=0){
			layer.getSource().removeFeature(publicObj.features[0]);
			publicObj.features.splice(0,1);
		}
		
		//清空表单元素
		var form = document.getElementById("popIbox_xbsx");  
		var tagElements = form.getElementsByTagName('input');  
		for (var j = 0; j < tagElements.length; j++){ 
			tagElements[j].value="";
		}
		var tagElements = form.getElementsByTagName('select'); 
		for (var j = 0; j < tagElements.length; j++){ 
			tagElements[j].value="";
		}
		
		
		$(".zs-btn.tg-button").addClass("disabled").attr("disabled", "disabled");
		$(".zs-btn.cz-button").addClass("disabled").attr("disabled", "disabled");
		$(".zs-btn.bsbh-button").addClass("disabled").attr("disabled", "disabled");
		$(".zs-btn.xyg-button").addClass("disabled").attr("disabled", "disabled");
	}
	function setButtonStatus(status) {
		var tools = $(".board-qh a");
		var disableArr = [];
		if (status) {
			switch (status) {
				case "99"://未审核
					disableArr = ["tool-cj", "tool-fg", "tool-hb", "tool-sc", "tool-sx"];
					break
				case "0"://审核通过
					disableArr = ["tool-cj","tool-xb", "tool-jdbj", "tool-fg", "tool-hb", "tool-sc", "tool-sx"];
					break
				case "1"://审核通过（有修改）
					disableArr = ["tool-xb", "tool-jdbj", "tool-fg", "tool-hb", "tool-sc", "tool-sx"];
					break
				case "2"://重做
					disableArr = ["tool-cj", "tool-fg", "tool-hb", "tool-sc", "tool-sx"];
					break
				case "-1"://无变化
					disableArr = ["tool-cj", "tool-fg", "tool-hb", "tool-sc", "tool-sx"];
					break
				case "98"://工具栏按钮放开
					break
			}
		} else {
			disableArr = ["tool-cj","tool-xb", "tool-jdbj", "tool-fg", "tool-hb", "tool-sc", "tool-sx"];
		}
		var len = tools.length;
		for (let i = 0; i < len; i++) {
			var e = tools[i];
			if (e.className.indexOf("tool-ht") < 0) {
				$(e).removeClass("disable");
			}
			if (disableArr.contains(e.className)) {
				$(e).addClass("disable");
			}
		}
	}
	return {
		init:init,
	}
});